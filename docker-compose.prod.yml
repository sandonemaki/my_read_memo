# version: '3'
services:
  my_read_memo_db:
    image: postgres:13
    # dbのユーザー名とパスワードでこれが無いとdbが起動できなかった
    environment:
      POSTGRES_USER: ${MY_READ_MEMO_DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${MY_READ_MEMO_DATABASE_PASSWORD}
    # 無くても動くけど指定しておくとdocker-composeを停止してもdbの内容が永続化されるため、指定することが多いと思われる
    # https://matsuand.github.io/docs.docker.jp.onthefly/storage/volumes/
    # volumes:
    #   - postgres_volume:/var/lib/postgresql/data
    # 無くても動くが指定しておくとコンテナ停止時にサービスが再起動してくれる
    # https://docs.docker.jp/v19.03/config/container/start-containers-automatically.html


  my_read_memo_web:
    build: .
    # tmp/pids/server.pidが残ってたら `A server is already running. ~~` のエラーでrailsを起動できないので事前に消してから、`rails sever` する
    command: |
      bash -c "
        rm -f tmp/pids/server.pid && 
        bundle install && 
        npm install &&
        RAILS_ENV=production bundle exec rails assets:precompile && 
        bundle exec rails s -p 3000 -b '0.0.0.0' -e production
      "
    # 上記のdbイメージで指定したユーザー名とパスワードをrails側でも指定するため環境変数に設定。
    environment:
      DOCKER_DB_USER: ${MY_READ_MEMO_DATABASE_USERNAME}
      DOCKER_DB_PASSWORD: ${MY_READ_MEMO_DATABASE_PASSWORD}
      SECRET_KEY_BASE: ${SECRET_KEY_BASE}
      RAILS_ENV: production
      RAILS_LOG_TO_STDOUT: 'true'
    # ホストのカレントディレクトリ(.)とイメージ内の/myappディレクトリを同期させている
    ports:
      - '3000:3000' # rails用
      - '3036:3036' # vite-rails用

  my_read_memo_webserver:
    image: nginx:latest
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./docker/nginx/conf/prod/:/etc/nginx/conf.d/
      - /etc/letsencrypt/live/localhost.yondeco.site:/etc/letsencrypt/live/localhost.yondeco.site
      - /etc/letsencrypt/archive/localhost.yondeco.site:/etc/letsencrypt/archive/localhost.yondeco.site
    # my_read_memo_webserver が my_read_memo_web に依存するように設定
    # Railsアプリケーションが完全に起動してからNginxが起動
    depends_on:
      - my_read_memo_web
